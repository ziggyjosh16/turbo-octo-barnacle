|DE1_top
clock_50 => gen_counter:large_counter.clk
clock_50 => gen_counter:half_second_counter.clk
clock_50 => gen_counter:one_second_counter.clk
hex0[0] <= seven_segment_cntrl:hex5_driver.hex[0]
hex0[1] <= seven_segment_cntrl:hex5_driver.hex[1]
hex0[2] <= seven_segment_cntrl:hex5_driver.hex[2]
hex0[3] <= seven_segment_cntrl:hex5_driver.hex[3]
hex0[4] <= seven_segment_cntrl:hex5_driver.hex[4]
hex0[5] <= seven_segment_cntrl:hex5_driver.hex[5]
hex0[6] <= seven_segment_cntrl:hex5_driver.hex[6]
hex1[0] <= seven_segment_cntrl:hex4_driver.hex[0]
hex1[1] <= seven_segment_cntrl:hex4_driver.hex[1]
hex1[2] <= seven_segment_cntrl:hex4_driver.hex[2]
hex1[3] <= seven_segment_cntrl:hex4_driver.hex[3]
hex1[4] <= seven_segment_cntrl:hex4_driver.hex[4]
hex1[5] <= seven_segment_cntrl:hex4_driver.hex[5]
hex1[6] <= seven_segment_cntrl:hex4_driver.hex[6]
hex2[0] <= seven_segment_cntrl:hex3_driver.hex[0]
hex2[1] <= seven_segment_cntrl:hex3_driver.hex[1]
hex2[2] <= seven_segment_cntrl:hex3_driver.hex[2]
hex2[3] <= seven_segment_cntrl:hex3_driver.hex[3]
hex2[4] <= seven_segment_cntrl:hex3_driver.hex[4]
hex2[5] <= seven_segment_cntrl:hex3_driver.hex[5]
hex2[6] <= seven_segment_cntrl:hex3_driver.hex[6]
hex3[0] <= seven_segment_cntrl:hex2_driver.hex[0]
hex3[1] <= seven_segment_cntrl:hex2_driver.hex[1]
hex3[2] <= seven_segment_cntrl:hex2_driver.hex[2]
hex3[3] <= seven_segment_cntrl:hex2_driver.hex[3]
hex3[4] <= seven_segment_cntrl:hex2_driver.hex[4]
hex3[5] <= seven_segment_cntrl:hex2_driver.hex[5]
hex3[6] <= seven_segment_cntrl:hex2_driver.hex[6]
hex4[0] <= seven_segment_cntrl:hex1_driver.hex[0]
hex4[1] <= seven_segment_cntrl:hex1_driver.hex[1]
hex4[2] <= seven_segment_cntrl:hex1_driver.hex[2]
hex4[3] <= seven_segment_cntrl:hex1_driver.hex[3]
hex4[4] <= seven_segment_cntrl:hex1_driver.hex[4]
hex4[5] <= seven_segment_cntrl:hex1_driver.hex[5]
hex4[6] <= seven_segment_cntrl:hex1_driver.hex[6]
hex5[0] <= seven_segment_cntrl:hex0_driver.hex[0]
hex5[1] <= seven_segment_cntrl:hex0_driver.hex[1]
hex5[2] <= seven_segment_cntrl:hex0_driver.hex[2]
hex5[3] <= seven_segment_cntrl:hex0_driver.hex[3]
hex5[4] <= seven_segment_cntrl:hex0_driver.hex[4]
hex5[5] <= seven_segment_cntrl:hex0_driver.hex[5]
hex5[6] <= seven_segment_cntrl:hex0_driver.hex[6]
ledr[0] <= comb.DB_MAX_OUTPUT_PORT_TYPE
ledr[1] <= ledr[1].DB_MAX_OUTPUT_PORT_TYPE
ledr[2] <= ledr[2].DB_MAX_OUTPUT_PORT_TYPE
ledr[3] <= ledr[3].DB_MAX_OUTPUT_PORT_TYPE
ledr[4] <= ledr[4].DB_MAX_OUTPUT_PORT_TYPE
ledr[5] <= ledr[5].DB_MAX_OUTPUT_PORT_TYPE
ledr[6] <= ledr[6].DB_MAX_OUTPUT_PORT_TYPE
ledr[7] <= ledr[7].DB_MAX_OUTPUT_PORT_TYPE
ledr[8] <= ledr[8].DB_MAX_OUTPUT_PORT_TYPE
ledr[9] <= ledr[9].DB_MAX_OUTPUT_PORT_TYPE
key[0] => current_state~3.DATAIN
key[0] => gen_counter:large_counter.reset
key[0] => gen_counter:half_second_counter.reset
key[0] => gen_counter:one_second_counter.reset
key[1] => Selector0.IN3
key[1] => Selector1.IN3
key[1] => Selector2.IN3
key[1] => Selector3.IN3
key[1] => Selector4.IN3
key[1] => Selector5.IN3
key[1] => Selector6.IN3
key[1] => Selector7.IN3
key[1] => Selector8.IN3
key[1] => Selector9.IN3
key[1] => Selector0.IN1
key[1] => Selector1.IN1
key[1] => Selector2.IN1
key[1] => Selector3.IN1
key[1] => Selector4.IN1
key[1] => Selector5.IN1
key[1] => Selector6.IN1
key[1] => Selector7.IN1
key[1] => Selector8.IN1
key[1] => Selector9.IN1
key[2] => next_state.s0.OUTPUTSELECT
key[2] => next_state.s1.OUTPUTSELECT
key[2] => next_state.s2.OUTPUTSELECT
key[2] => next_state.s3.OUTPUTSELECT
key[2] => next_state.s4.OUTPUTSELECT
key[2] => next_state.s5.OUTPUTSELECT
key[2] => next_state.s6.OUTPUTSELECT
key[2] => next_state.s7.OUTPUTSELECT
key[2] => next_state.s8.OUTPUTSELECT
key[2] => next_state.s9.OUTPUTSELECT
key[3] => ~NO_FANOUT~
sw[0] => clocky.OUTPUTSELECT
sw[1] => i0[3].OUTPUTSELECT
sw[1] => i0[2].OUTPUTSELECT
sw[1] => i0[1].OUTPUTSELECT
sw[1] => i0[0].OUTPUTSELECT
sw[1] => i1[3].OUTPUTSELECT
sw[1] => i1[2].OUTPUTSELECT
sw[1] => i1[1].OUTPUTSELECT
sw[1] => i1[0].OUTPUTSELECT
sw[1] => i2[3].OUTPUTSELECT
sw[1] => i2[2].OUTPUTSELECT
sw[1] => i2[1].OUTPUTSELECT
sw[1] => i2[0].OUTPUTSELECT
sw[1] => i3[3].OUTPUTSELECT
sw[1] => i3[2].OUTPUTSELECT
sw[1] => i3[1].OUTPUTSELECT
sw[1] => i3[0].OUTPUTSELECT
sw[1] => i4[3].OUTPUTSELECT
sw[1] => i4[2].OUTPUTSELECT
sw[1] => i4[1].OUTPUTSELECT
sw[1] => i4[0].OUTPUTSELECT
sw[1] => i5[3].OUTPUTSELECT
sw[1] => i5[2].OUTPUTSELECT
sw[1] => i5[1].OUTPUTSELECT
sw[1] => i5[0].OUTPUTSELECT
sw[2] => ~NO_FANOUT~
sw[3] => ~NO_FANOUT~
sw[4] => ~NO_FANOUT~
sw[5] => ~NO_FANOUT~
sw[6] => ~NO_FANOUT~
sw[7] => ~NO_FANOUT~
sw[8] => ~NO_FANOUT~
sw[9] => ~NO_FANOUT~


|DE1_top|gen_counter:large_counter
clk => term~reg0.CLK
clk => i_count[0].CLK
clk => i_count[1].CLK
clk => i_count[2].CLK
clk => i_count[3].CLK
clk => i_count[4].CLK
clk => i_count[5].CLK
clk => i_count[6].CLK
clk => i_count[7].CLK
clk => i_count[8].CLK
clk => i_count[9].CLK
clk => i_count[10].CLK
clk => i_count[11].CLK
clk => i_count[12].CLK
clk => i_count[13].CLK
clk => i_count[14].CLK
clk => i_count[15].CLK
clk => i_count[16].CLK
clk => i_count[17].CLK
clk => i_count[18].CLK
clk => i_count[19].CLK
clk => i_count[20].CLK
clk => i_count[21].CLK
clk => i_count[22].CLK
clk => i_count[23].CLK
clk => i_count[24].CLK
clk => i_count[25].CLK
clk => i_count[26].CLK
clk => i_count[27].CLK
data[0] => i_count.DATAB
data[1] => i_count.DATAB
data[2] => i_count.DATAB
data[3] => i_count.DATAB
data[4] => i_count.DATAB
data[5] => i_count.DATAB
data[6] => i_count.DATAB
data[7] => i_count.DATAB
data[8] => i_count.DATAB
data[9] => i_count.DATAB
data[10] => i_count.DATAB
data[11] => i_count.DATAB
data[12] => i_count.DATAB
data[13] => i_count.DATAB
data[14] => i_count.DATAB
data[15] => i_count.DATAB
data[16] => i_count.DATAB
data[17] => i_count.DATAB
data[18] => i_count.DATAB
data[19] => i_count.DATAB
data[20] => i_count.DATAB
data[21] => i_count.DATAB
data[22] => i_count.DATAB
data[23] => i_count.DATAB
data[24] => i_count.DATAB
data[25] => i_count.DATAB
data[26] => i_count.DATAB
data[27] => i_count.DATAB
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => term.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => term.OUTPUTSELECT
reset => term~reg0.ACLR
reset => i_count[0].ACLR
reset => i_count[1].ACLR
reset => i_count[2].ACLR
reset => i_count[3].ACLR
reset => i_count[4].ACLR
reset => i_count[5].ACLR
reset => i_count[6].ACLR
reset => i_count[7].ACLR
reset => i_count[8].ACLR
reset => i_count[9].ACLR
reset => i_count[10].ACLR
reset => i_count[11].ACLR
reset => i_count[12].ACLR
reset => i_count[13].ACLR
reset => i_count[14].ACLR
reset => i_count[15].ACLR
reset => i_count[16].ACLR
reset => i_count[17].ACLR
reset => i_count[18].ACLR
reset => i_count[19].ACLR
reset => i_count[20].ACLR
reset => i_count[21].ACLR
reset => i_count[22].ACLR
reset => i_count[23].ACLR
reset => i_count[24].ACLR
reset => i_count[25].ACLR
reset => i_count[26].ACLR
reset => i_count[27].ACLR
count[0] <= i_count[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= i_count[1].DB_MAX_OUTPUT_PORT_TYPE
count[2] <= i_count[2].DB_MAX_OUTPUT_PORT_TYPE
count[3] <= i_count[3].DB_MAX_OUTPUT_PORT_TYPE
count[4] <= i_count[4].DB_MAX_OUTPUT_PORT_TYPE
count[5] <= i_count[5].DB_MAX_OUTPUT_PORT_TYPE
count[6] <= i_count[6].DB_MAX_OUTPUT_PORT_TYPE
count[7] <= i_count[7].DB_MAX_OUTPUT_PORT_TYPE
count[8] <= i_count[8].DB_MAX_OUTPUT_PORT_TYPE
count[9] <= i_count[9].DB_MAX_OUTPUT_PORT_TYPE
count[10] <= i_count[10].DB_MAX_OUTPUT_PORT_TYPE
count[11] <= i_count[11].DB_MAX_OUTPUT_PORT_TYPE
count[12] <= i_count[12].DB_MAX_OUTPUT_PORT_TYPE
count[13] <= i_count[13].DB_MAX_OUTPUT_PORT_TYPE
count[14] <= i_count[14].DB_MAX_OUTPUT_PORT_TYPE
count[15] <= i_count[15].DB_MAX_OUTPUT_PORT_TYPE
count[16] <= i_count[16].DB_MAX_OUTPUT_PORT_TYPE
count[17] <= i_count[17].DB_MAX_OUTPUT_PORT_TYPE
count[18] <= i_count[18].DB_MAX_OUTPUT_PORT_TYPE
count[19] <= i_count[19].DB_MAX_OUTPUT_PORT_TYPE
count[20] <= i_count[20].DB_MAX_OUTPUT_PORT_TYPE
count[21] <= i_count[21].DB_MAX_OUTPUT_PORT_TYPE
count[22] <= i_count[22].DB_MAX_OUTPUT_PORT_TYPE
count[23] <= i_count[23].DB_MAX_OUTPUT_PORT_TYPE
count[24] <= i_count[24].DB_MAX_OUTPUT_PORT_TYPE
count[25] <= i_count[25].DB_MAX_OUTPUT_PORT_TYPE
count[26] <= i_count[26].DB_MAX_OUTPUT_PORT_TYPE
count[27] <= i_count[27].DB_MAX_OUTPUT_PORT_TYPE
term <= term~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_top|gen_counter:half_second_counter
clk => term~reg0.CLK
clk => i_count[0].CLK
clk => i_count[1].CLK
data[0] => i_count.DATAB
data[1] => i_count.DATAB
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => term.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => term.OUTPUTSELECT
reset => term~reg0.ACLR
reset => i_count[0].ACLR
reset => i_count[1].ACLR
count[0] <= i_count[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= i_count[1].DB_MAX_OUTPUT_PORT_TYPE
term <= term~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_top|gen_counter:one_second_counter
clk => term~reg0.CLK
clk => i_count[0].CLK
clk => i_count[1].CLK
data[0] => i_count.DATAB
data[1] => i_count.DATAB
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => term.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => term.OUTPUTSELECT
reset => term~reg0.ACLR
reset => i_count[0].ACLR
reset => i_count[1].ACLR
count[0] <= i_count[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= i_count[1].DB_MAX_OUTPUT_PORT_TYPE
term <= term~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_top|seven_segment_cntrl:hex0_driver
input[0] => Mux0.IN19
input[0] => Mux1.IN19
input[0] => Mux2.IN19
input[0] => Mux3.IN19
input[0] => Mux4.IN19
input[0] => Mux5.IN19
input[0] => Mux6.IN19
input[1] => Mux0.IN18
input[1] => Mux1.IN18
input[1] => Mux2.IN18
input[1] => Mux3.IN18
input[1] => Mux4.IN18
input[1] => Mux5.IN18
input[1] => Mux6.IN18
input[2] => Mux0.IN17
input[2] => Mux1.IN17
input[2] => Mux2.IN17
input[2] => Mux3.IN17
input[2] => Mux4.IN17
input[2] => Mux5.IN17
input[2] => Mux6.IN17
input[3] => Mux0.IN16
input[3] => Mux1.IN16
input[3] => Mux2.IN16
input[3] => Mux3.IN16
input[3] => Mux4.IN16
input[3] => Mux5.IN16
input[3] => Mux6.IN16
hex[0] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE


|DE1_top|seven_segment_cntrl:hex1_driver
input[0] => Mux0.IN19
input[0] => Mux1.IN19
input[0] => Mux2.IN19
input[0] => Mux3.IN19
input[0] => Mux4.IN19
input[0] => Mux5.IN19
input[0] => Mux6.IN19
input[1] => Mux0.IN18
input[1] => Mux1.IN18
input[1] => Mux2.IN18
input[1] => Mux3.IN18
input[1] => Mux4.IN18
input[1] => Mux5.IN18
input[1] => Mux6.IN18
input[2] => Mux0.IN17
input[2] => Mux1.IN17
input[2] => Mux2.IN17
input[2] => Mux3.IN17
input[2] => Mux4.IN17
input[2] => Mux5.IN17
input[2] => Mux6.IN17
input[3] => Mux0.IN16
input[3] => Mux1.IN16
input[3] => Mux2.IN16
input[3] => Mux3.IN16
input[3] => Mux4.IN16
input[3] => Mux5.IN16
input[3] => Mux6.IN16
hex[0] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE


|DE1_top|seven_segment_cntrl:hex2_driver
input[0] => Mux0.IN19
input[0] => Mux1.IN19
input[0] => Mux2.IN19
input[0] => Mux3.IN19
input[0] => Mux4.IN19
input[0] => Mux5.IN19
input[0] => Mux6.IN19
input[1] => Mux0.IN18
input[1] => Mux1.IN18
input[1] => Mux2.IN18
input[1] => Mux3.IN18
input[1] => Mux4.IN18
input[1] => Mux5.IN18
input[1] => Mux6.IN18
input[2] => Mux0.IN17
input[2] => Mux1.IN17
input[2] => Mux2.IN17
input[2] => Mux3.IN17
input[2] => Mux4.IN17
input[2] => Mux5.IN17
input[2] => Mux6.IN17
input[3] => Mux0.IN16
input[3] => Mux1.IN16
input[3] => Mux2.IN16
input[3] => Mux3.IN16
input[3] => Mux4.IN16
input[3] => Mux5.IN16
input[3] => Mux6.IN16
hex[0] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE


|DE1_top|seven_segment_cntrl:hex3_driver
input[0] => Mux0.IN19
input[0] => Mux1.IN19
input[0] => Mux2.IN19
input[0] => Mux3.IN19
input[0] => Mux4.IN19
input[0] => Mux5.IN19
input[0] => Mux6.IN19
input[1] => Mux0.IN18
input[1] => Mux1.IN18
input[1] => Mux2.IN18
input[1] => Mux3.IN18
input[1] => Mux4.IN18
input[1] => Mux5.IN18
input[1] => Mux6.IN18
input[2] => Mux0.IN17
input[2] => Mux1.IN17
input[2] => Mux2.IN17
input[2] => Mux3.IN17
input[2] => Mux4.IN17
input[2] => Mux5.IN17
input[2] => Mux6.IN17
input[3] => Mux0.IN16
input[3] => Mux1.IN16
input[3] => Mux2.IN16
input[3] => Mux3.IN16
input[3] => Mux4.IN16
input[3] => Mux5.IN16
input[3] => Mux6.IN16
hex[0] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE


|DE1_top|seven_segment_cntrl:hex4_driver
input[0] => Mux0.IN19
input[0] => Mux1.IN19
input[0] => Mux2.IN19
input[0] => Mux3.IN19
input[0] => Mux4.IN19
input[0] => Mux5.IN19
input[0] => Mux6.IN19
input[1] => Mux0.IN18
input[1] => Mux1.IN18
input[1] => Mux2.IN18
input[1] => Mux3.IN18
input[1] => Mux4.IN18
input[1] => Mux5.IN18
input[1] => Mux6.IN18
input[2] => Mux0.IN17
input[2] => Mux1.IN17
input[2] => Mux2.IN17
input[2] => Mux3.IN17
input[2] => Mux4.IN17
input[2] => Mux5.IN17
input[2] => Mux6.IN17
input[3] => Mux0.IN16
input[3] => Mux1.IN16
input[3] => Mux2.IN16
input[3] => Mux3.IN16
input[3] => Mux4.IN16
input[3] => Mux5.IN16
input[3] => Mux6.IN16
hex[0] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE


|DE1_top|seven_segment_cntrl:hex5_driver
input[0] => Mux0.IN19
input[0] => Mux1.IN19
input[0] => Mux2.IN19
input[0] => Mux3.IN19
input[0] => Mux4.IN19
input[0] => Mux5.IN19
input[0] => Mux6.IN19
input[1] => Mux0.IN18
input[1] => Mux1.IN18
input[1] => Mux2.IN18
input[1] => Mux3.IN18
input[1] => Mux4.IN18
input[1] => Mux5.IN18
input[1] => Mux6.IN18
input[2] => Mux0.IN17
input[2] => Mux1.IN17
input[2] => Mux2.IN17
input[2] => Mux3.IN17
input[2] => Mux4.IN17
input[2] => Mux5.IN17
input[2] => Mux6.IN17
input[3] => Mux0.IN16
input[3] => Mux1.IN16
input[3] => Mux2.IN16
input[3] => Mux3.IN16
input[3] => Mux4.IN16
input[3] => Mux5.IN16
input[3] => Mux6.IN16
hex[0] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE


